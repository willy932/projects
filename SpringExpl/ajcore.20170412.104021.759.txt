---- AspectJ Properties ---
AspectJ Compiler 1.6.12 built on Tuesday Oct 18, 2011 at 17:52:06 GMT
---- Dump Properties ---
Dump file: ajcore.20170412.104021.759.txt
Dump reason: abort
Dump on exception: true
Dump at exit condition: abort
---- System Properties ---
java.runtime.name=Java(TM) SE Runtime Environment
sun.boot.library.path=C:\Program Files\Java\jre1.8.0_121\bin
java.vm.version=25.121-b13
java.vm.vendor=Oracle Corporation
java.vendor.url=http://java.oracle.com/
path.separator=;
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
file.encoding.pkg=sun.io
user.country=FR
user.script=
sun.java.launcher=SUN_STANDARD
sun.os.patch.level=
java.vm.specification.name=Java Virtual Machine Specification
user.dir=C:\Users\formation\git\projects\SpringExpl
java.runtime.version=1.8.0_121-b13
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_121\lib\endorsed
os.arch=amd64
java.io.tmpdir=C:\Users\FORMAT~1\AppData\Local\Temp\
line.separator=

java.vm.specification.vendor=Oracle Corporation
user.variant=
os.name=Windows 10
sun.jnu.encoding=Cp1252
java.library.path=C:\Program Files\Java\jre1.8.0_121\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:/Program Files/Java/jre1.8.0_121/bin/server;C:/Program Files/Java/jre1.8.0_121/bin;C:/Program Files/Java/jre1.8.0_121/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_101\bin;C:\Outils\apache-maven-3.3.9\bin;C:\Users\formation\AppData\Local\Microsoft\WindowsApps;;C:\Users\formation\Desktop\JRE JDK ECLIPSE\sts-bundle\sts-3.8.3.RELEASE;;.
java.specification.name=Java Platform API Specification
java.class.version=52.0
sun.management.compiler=HotSpot 64-Bit Tiered Compilers
os.version=10.0
user.home=C:\Users\formation
user.timezone=Europe/Paris
java.awt.printerjob=sun.awt.windows.WPrinterJob
file.encoding=UTF-8
java.specification.version=1.8
java.class.path=C:\Users\formation\git\projects\SpringExpl\target\classes;C:\Users\formation\.m2\repository\org\springframework\spring-aspects\4.1.4.RELEASE\spring-aspects-4.1.4.RELEASE.jar;C:\Users\formation\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\formation\.m2\repository\org\aspectj\aspectjweaver\1.6.12\aspectjweaver-1.6.12.jar;C:\Users\formation\.m2\repository\org\springframework\spring-core\4.1.6.RELEASE\spring-core-4.1.6.RELEASE.jar;C:\Users\formation\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\formation\.m2\repository\org\springframework\spring-context\4.1.6.RELEASE\spring-context-4.1.6.RELEASE.jar;C:\Users\formation\.m2\repository\org\springframework\spring-aop\4.1.6.RELEASE\spring-aop-4.1.6.RELEASE.jar;C:\Users\formation\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\formation\.m2\repository\org\springframework\spring-beans\4.1.6.RELEASE\spring-beans-4.1.6.RELEASE.jar;C:\Users\formation\.m2\repository\org\springframework\spring-expression\4.1.6.RELEASE\spring-expression-4.1.6.RELEASE.jar;C:\Users\formation\Desktop\spring-agent-2.5.6.jar
user.name=formation
java.vm.specification.version=1.8
sun.java.command=com.springExemple.presentation.Presentation2
java.home=C:\Program Files\Java\jre1.8.0_121
sun.arch.data.model=64
user.language=fr
java.specification.vendor=Oracle Corporation
awt.toolkit=sun.awt.windows.WToolkit
java.vm.info=mixed mode
java.version=1.8.0_121
java.ext.dirs=C:\Program Files\Java\jre1.8.0_121\lib\ext;C:\windows\Sun\Java\lib\ext
sun.boot.class.path=C:\Program Files\Java\jre1.8.0_121\lib\resources.jar;C:\Program Files\Java\jre1.8.0_121\lib\rt.jar;C:\Program Files\Java\jre1.8.0_121\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_121\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_121\lib\jce.jar;C:\Program Files\Java\jre1.8.0_121\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_121\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_121\classes
java.vendor=Oracle Corporation
file.separator=\
java.vendor.url.bug=http://bugreport.sun.com/bugreport/
sun.io.unicode.encoding=UnicodeLittle
sun.cpu.endian=little
sun.desktop=windows
sun.cpu.isalist=amd64
---- Command Line ---
Empty
---- Full Classpath ---
Empty
---- Compiler Messages ---
info AspectJ Weaver Version 1.6.12 built on Tuesday Oct 18, 2011 at 17:52:06 GMT
info register classloader sun.misc.Launcher$AppClassLoader@18b4aac2
info using configuration file:/C:/Users/formation/.m2/repository/org/springframework/spring-aspects/4.1.4.RELEASE/spring-aspects-4.1.4.RELEASE.jar!/META-INF/aop.xml
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.propertyeditors.TimeZoneEditor
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.propertyeditors.TimeZoneEditor extends java.beans.PropertyEditorSupport:
  public void <init>():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/TimeZoneEditor; this   (line 35)
                    INVOKESPECIAL java.beans.PropertyEditorSupport.<init> ()V
    constructor-execution(void org.springframework.beans.propertyeditors.TimeZoneEditor.<init>())
    |               RETURN
    constructor-execution(void org.springframework.beans.propertyeditors.TimeZoneEditor.<init>())
  end public void <init>()

  public void setAsText(String) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/TimeZoneEditor; this   (line 39)
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKESTATIC org.springframework.util.StringUtils.parseTimeZoneString (Ljava/lang/String;)Ljava/util/TimeZone;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.TimeZoneEditor.setValue (Ljava/lang/Object;)V
                    RETURN   (line 40)
  end public void setAsText(String) throws java.lang.IllegalArgumentException

  public String getAsText():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/TimeZoneEditor; this   (line 44)
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.TimeZoneEditor.getValue ()Ljava/lang/Object;
                    CHECKCAST java.util.TimeZone
                    ASTORE_1
                    ALOAD_1     // Ljava/util/TimeZone; value   (line 45)
                    IFNULL L0
                    ALOAD_1     // Ljava/util/TimeZone; value
                    INVOKEVIRTUAL java.util.TimeZone.getID ()Ljava/lang/String;
                    GOTO L1
                L0: LDC ""
                L1: ARETURN
  end public String getAsText()

end public class org.springframework.beans.propertyeditors.TimeZoneEditor
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:384)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.PropertyEditorRegistrySupport.createDefaultEditors(PropertyEditorRegistrySupport.java:215)
	at org.springframework.beans.PropertyEditorRegistrySupport.getDefaultEditor(PropertyEditorRegistrySupport.java:191)
	at org.springframework.beans.TypeConverterDelegate.findDefaultEditor(TypeConverterDelegate.java:358)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:193)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.propertyeditors.UUIDEditor
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.propertyeditors.UUIDEditor extends java.beans.PropertyEditorSupport:
  public void <init>():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/UUIDEditor; this   (line 32)
                    INVOKESPECIAL java.beans.PropertyEditorSupport.<init> ()V
    constructor-execution(void org.springframework.beans.propertyeditors.UUIDEditor.<init>())
    |               RETURN
    constructor-execution(void org.springframework.beans.propertyeditors.UUIDEditor.<init>())
  end public void <init>()

  public void setAsText(String) throws java.lang.IllegalArgumentException:
                    ALOAD_1     // Ljava/lang/String; text   (line 36)
                    INVOKESTATIC org.springframework.util.StringUtils.hasText (Ljava/lang/String;)Z
                    IFEQ L0
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/UUIDEditor; this   (line 37)
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKESTATIC java.util.UUID.fromString (Ljava/lang/String;)Ljava/util/UUID;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.UUIDEditor.setValue (Ljava/lang/Object;)V
                    GOTO L1
                L0: ALOAD_0     // Lorg/springframework/beans/propertyeditors/UUIDEditor; this   (line 40)
                    ACONST_NULL
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.UUIDEditor.setValue (Ljava/lang/Object;)V
                L1: RETURN   (line 42)
  end public void setAsText(String) throws java.lang.IllegalArgumentException

  public String getAsText():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/UUIDEditor; this   (line 46)
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.UUIDEditor.getValue ()Ljava/lang/Object;
                    CHECKCAST java.util.UUID
                    ASTORE_1
                    ALOAD_1     // Ljava/util/UUID; value   (line 47)
                    IFNULL L0
                    ALOAD_1     // Ljava/util/UUID; value
                    INVOKEVIRTUAL java.util.UUID.toString ()Ljava/lang/String;
                    GOTO L1
                L0: LDC ""
                L1: ARETURN
  end public String getAsText()

end public class org.springframework.beans.propertyeditors.UUIDEditor
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:384)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.PropertyEditorRegistrySupport.createDefaultEditors(PropertyEditorRegistrySupport.java:218)
	at org.springframework.beans.PropertyEditorRegistrySupport.getDefaultEditor(PropertyEditorRegistrySupport.java:191)
	at org.springframework.beans.TypeConverterDelegate.findDefaultEditor(TypeConverterDelegate.java:358)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:193)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.propertyeditors.ZoneIdEditor
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.propertyeditors.ZoneIdEditor extends java.beans.PropertyEditorSupport:
  public void <init>():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/ZoneIdEditor; this   (line 34)
                    INVOKESPECIAL java.beans.PropertyEditorSupport.<init> ()V
    constructor-execution(void org.springframework.beans.propertyeditors.ZoneIdEditor.<init>())
    |               RETURN
    constructor-execution(void org.springframework.beans.propertyeditors.ZoneIdEditor.<init>())
  end public void <init>()

  public void setAsText(String) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/ZoneIdEditor; this   (line 38)
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKESTATIC java.time.ZoneId.of (Ljava/lang/String;)Ljava/time/ZoneId;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.ZoneIdEditor.setValue (Ljava/lang/Object;)V
                    RETURN   (line 39)
  end public void setAsText(String) throws java.lang.IllegalArgumentException

  public String getAsText():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/ZoneIdEditor; this   (line 43)
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.ZoneIdEditor.getValue ()Ljava/lang/Object;
                    CHECKCAST java.time.ZoneId
                    ASTORE_1
                    ALOAD_1     // Ljava/time/ZoneId; value   (line 44)
                    IFNULL L0
                    ALOAD_1     // Ljava/time/ZoneId; value
                    INVOKEVIRTUAL java.time.ZoneId.getId ()Ljava/lang/String;
                    GOTO L1
                L0: LDC ""
                L1: ARETURN
  end public String getAsText()

end public class org.springframework.beans.propertyeditors.ZoneIdEditor
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:384)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.PropertyEditorRegistrySupport.createDefaultEditors(PropertyEditorRegistrySupport.java:220)
	at org.springframework.beans.PropertyEditorRegistrySupport.getDefaultEditor(PropertyEditorRegistrySupport.java:191)
	at org.springframework.beans.TypeConverterDelegate.findDefaultEditor(TypeConverterDelegate.java:358)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:193)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.propertyeditors.CustomCollectionEditor
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.propertyeditors.CustomCollectionEditor extends java.beans.PropertyEditorSupport:
  private final Class collectionType [Signature(Ljava/lang/Class<+Ljava/util/Collection;>;)]
  private final boolean nullAsEmptyCollection
  public void <init>(Class):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 63)
                    ALOAD_1     // Ljava/lang/Class; collectionType
                    ICONST_0
                    INVOKESPECIAL org.springframework.beans.propertyeditors.CustomCollectionEditor.<init> (Ljava/lang/Class;Z)V
    constructor-execution(void org.springframework.beans.propertyeditors.CustomCollectionEditor.<init>(java.lang.Class))
    |               RETURN   (line 64)
    constructor-execution(void org.springframework.beans.propertyeditors.CustomCollectionEditor.<init>(java.lang.Class))
  end public void <init>(Class)

  public void <init>(Class, boolean):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 85)
                    INVOKESPECIAL java.beans.PropertyEditorSupport.<init> ()V
    constructor-execution(void org.springframework.beans.propertyeditors.CustomCollectionEditor.<init>(java.lang.Class, boolean))
    |               ALOAD_1     // Ljava/lang/Class; collectionType   (line 86)
    |               IFNONNULL L0
    |               NEW java.lang.IllegalArgumentException   (line 87)
    |               DUP
    |               LDC "Collection type is required"
    |               INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
    |               ATHROW
    |           L0: LDC java.util.Collection   (line 89)
    |               ALOAD_1     // Ljava/lang/Class; collectionType
    |               INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
    |               IFNE L1
    |               NEW java.lang.IllegalArgumentException   (line 90)
    |               DUP
    |               NEW java.lang.StringBuilder
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuilder.<init> ()V
    |               LDC "Collection type ["
    |               INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
    |               ALOAD_1     // Ljava/lang/Class; collectionType
    |               INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;   (line 91)
    |               INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
    |               LDC "] does not implement [java.util.Collection]"
    |               INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
    |               INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
    |               INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
    |               ATHROW
    |           L1: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 93)
    |               ALOAD_1     // Ljava/lang/Class; collectionType
    |               PUTFIELD org.springframework.beans.propertyeditors.CustomCollectionEditor.collectionType Ljava/lang/Class;
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 94)
    |               ILOAD_2     // Z nullAsEmptyCollection
    |               PUTFIELD org.springframework.beans.propertyeditors.CustomCollectionEditor.nullAsEmptyCollection Z
    |               RETURN   (line 95)
    constructor-execution(void org.springframework.beans.propertyeditors.CustomCollectionEditor.<init>(java.lang.Class, boolean))
  end public void <init>(Class, boolean)

  public void setAsText(String) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 103)
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomCollectionEditor.setValue (Ljava/lang/Object;)V
                    RETURN   (line 104)
  end public void setAsText(String) throws java.lang.IllegalArgumentException

  public void setValue(Object):
                    ALOAD_1     // Ljava/lang/Object; value   (line 111)
                    IFNONNULL L0
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomCollectionEditor.nullAsEmptyCollection Z
                    IFEQ L0
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 112)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomCollectionEditor.collectionType Ljava/lang/Class;
                    ICONST_0
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomCollectionEditor.createCollection (Ljava/lang/Class;I)Ljava/util/Collection;
                    INVOKESPECIAL java.beans.PropertyEditorSupport.setValue (Ljava/lang/Object;)V
                    GOTO L9
                L0: ALOAD_1     // Ljava/lang/Object; value   (line 114)
                    IFNULL L1
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomCollectionEditor.collectionType Ljava/lang/Class;
                    ALOAD_1     // Ljava/lang/Object; value
                    INVOKEVIRTUAL java.lang.Class.isInstance (Ljava/lang/Object;)Z
                    IFEQ L2
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomCollectionEditor.alwaysCreateNewCollection ()Z
                    IFNE L2
                L1: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 116)
                    ALOAD_1     // Ljava/lang/Object; value
                    INVOKESPECIAL java.beans.PropertyEditorSupport.setValue (Ljava/lang/Object;)V
                    GOTO L9
                L2: ALOAD_1     // Ljava/lang/Object; value   (line 118)
                    INSTANCEOF java.util.Collection
                    IFEQ L5
                    ALOAD_1     // Ljava/lang/Object; value   (line 120)
                    CHECKCAST java.util.Collection
                    ASTORE_2
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 121)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomCollectionEditor.collectionType Ljava/lang/Class;
                    ALOAD_2     // Ljava/util/Collection; source
                    INVOKEINTERFACE java.util.Collection.size ()I
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomCollectionEditor.createCollection (Ljava/lang/Class;I)Ljava/util/Collection;
                    ASTORE_3
                    ALOAD_2     // Ljava/util/Collection; source   (line 122)
                    INVOKEINTERFACE java.util.Collection.iterator ()Ljava/util/Iterator;
                    ASTORE 4
                L3: ALOAD 4
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFEQ L4
                    ALOAD 4
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    ASTORE 5
                    ALOAD_3     // Ljava/util/Collection; target   (line 123)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this
                    ALOAD 5     // Ljava/lang/Object; elem
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomCollectionEditor.convertElement (Ljava/lang/Object;)Ljava/lang/Object;
                    INVOKEINTERFACE java.util.Collection.add (Ljava/lang/Object;)Z
                    POP
                    GOTO L3   (line 124)
                L4: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 125)
                    ALOAD_3     // Ljava/util/Collection; target
                    INVOKESPECIAL java.beans.PropertyEditorSupport.setValue (Ljava/lang/Object;)V
                    GOTO L9   (line 126)
                L5: ALOAD_1     // Ljava/lang/Object; value   (line 127)
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.isArray ()Z
                    IFEQ L8
                    ALOAD_1     // Ljava/lang/Object; value   (line 129)
                    INVOKESTATIC java.lang.reflect.Array.getLength (Ljava/lang/Object;)I
                    ISTORE_2
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 130)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomCollectionEditor.collectionType Ljava/lang/Class;
                    ILOAD_2     // I length
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomCollectionEditor.createCollection (Ljava/lang/Class;I)Ljava/util/Collection;
                    ASTORE_3
                    ICONST_0   (line 131)
                    ISTORE 4
                L6: ILOAD 4     // I i
                    ILOAD_2     // I length
                    IF_ICMPGE L7
                    ALOAD_3     // Ljava/util/Collection; target   (line 132)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this
                    ALOAD_1     // Ljava/lang/Object; value
                    ILOAD 4     // I i
                    INVOKESTATIC java.lang.reflect.Array.get (Ljava/lang/Object;I)Ljava/lang/Object;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomCollectionEditor.convertElement (Ljava/lang/Object;)Ljava/lang/Object;
                    INVOKEINTERFACE java.util.Collection.add (Ljava/lang/Object;)Z
                    POP
                    IINC 4 1     // I i   (line 131)
                    GOTO L6
                L7: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 134)
                    ALOAD_3     // Ljava/util/Collection; target
                    INVOKESPECIAL java.beans.PropertyEditorSupport.setValue (Ljava/lang/Object;)V
                    GOTO L9   (line 135)
                L8: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 138)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomCollectionEditor.collectionType Ljava/lang/Class;
                    ICONST_1
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomCollectionEditor.createCollection (Ljava/lang/Class;I)Ljava/util/Collection;
                    ASTORE_2
                    ALOAD_2     // Ljava/util/Collection; target   (line 139)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this
                    ALOAD_1     // Ljava/lang/Object; value
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomCollectionEditor.convertElement (Ljava/lang/Object;)Ljava/lang/Object;
                    INVOKEINTERFACE java.util.Collection.add (Ljava/lang/Object;)Z
                    POP
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomCollectionEditor; this   (line 140)
                    ALOAD_2     // Ljava/util/Collection; target
                    INVOKESPECIAL java.beans.PropertyEditorSupport.setValue (Ljava/lang/Object;)V
                L9: RETURN   (line 142)
  end public void setValue(Object)

  protected java.util.Collection createCollection(Class, int):
                    ALOAD_1     // Ljava/lang/Class; collectionType   (line 153)
                    INVOKEVIRTUAL java.lang.Class.isInterface ()Z
                    IFNE L0
    catch java.lang.Exception -> E0
    |               ALOAD_1     // Ljava/lang/Class; collectionType   (line 155)
    |               INVOKEVIRTUAL java.lang.Class.newInstance ()Ljava/lang/Object;
    |               CHECKCAST java.util.Collection
    catch java.lang.Exception -> E0
                    ARETURN
                E0: ASTORE_3   (line 157)
                    NEW java.lang.IllegalArgumentException   (line 158)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "Could not instantiate collection class ["
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_1     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;   (line 159)
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC "]: "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_3     // Ljava/lang/Exception; ex
                    INVOKEVIRTUAL java.lang.Exception.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L0: LDC java.util.List   (line 162)
                    ALOAD_1     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L1
                    NEW java.util.ArrayList   (line 163)
                    DUP
                    ILOAD_2     // I initialCapacity
                    INVOKESPECIAL java.util.ArrayList.<init> (I)V
                    ARETURN
                L1: LDC java.util.SortedSet   (line 165)
                    ALOAD_1     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L2
                    NEW java.util.TreeSet   (line 166)
                    DUP
                    INVOKESPECIAL java.util.TreeSet.<init> ()V
                    ARETURN
                L2: NEW java.util.LinkedHashSet   (line 169)
                    DUP
                    ILOAD_2     // I initialCapacity
                    INVOKESPECIAL java.util.LinkedHashSet.<init> (I)V
                    ARETURN
  end protected java.util.Collection createCollection(Class, int)

  protected boolean alwaysCreateNewCollection():
                    ICONST_0   (line 181)
                    IRETURN
  end protected boolean alwaysCreateNewCollection()

  protected Object convertElement(Object):
                    ALOAD_1     // Ljava/lang/Object; element   (line 199)
                    ARETURN
  end protected Object convertElement(Object)

  public String getAsText():
                    ACONST_NULL   (line 209)
                    ARETURN
  end public String getAsText()

end public class org.springframework.beans.propertyeditors.CustomCollectionEditor
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:384)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.PropertyEditorRegistrySupport.createDefaultEditors(PropertyEditorRegistrySupport.java:225)
	at org.springframework.beans.PropertyEditorRegistrySupport.getDefaultEditor(PropertyEditorRegistrySupport.java:191)
	at org.springframework.beans.TypeConverterDelegate.findDefaultEditor(TypeConverterDelegate.java:358)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:193)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.propertyeditors.CustomMapEditor
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.propertyeditors.CustomMapEditor extends java.beans.PropertyEditorSupport:
  private final Class mapType [Signature(Ljava/lang/Class<+Ljava/util/Map;>;)]
  private final boolean nullAsEmptyMap
  public void <init>(Class):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this   (line 54)
                    ALOAD_1     // Ljava/lang/Class; mapType
                    ICONST_0
                    INVOKESPECIAL org.springframework.beans.propertyeditors.CustomMapEditor.<init> (Ljava/lang/Class;Z)V
    constructor-execution(void org.springframework.beans.propertyeditors.CustomMapEditor.<init>(java.lang.Class))
    |               RETURN   (line 55)
    constructor-execution(void org.springframework.beans.propertyeditors.CustomMapEditor.<init>(java.lang.Class))
  end public void <init>(Class)

  public void <init>(Class, boolean):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this   (line 75)
                    INVOKESPECIAL java.beans.PropertyEditorSupport.<init> ()V
    constructor-execution(void org.springframework.beans.propertyeditors.CustomMapEditor.<init>(java.lang.Class, boolean))
    |               ALOAD_1     // Ljava/lang/Class; mapType   (line 76)
    |               IFNONNULL L0
    |               NEW java.lang.IllegalArgumentException   (line 77)
    |               DUP
    |               LDC "Map type is required"
    |               INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
    |               ATHROW
    |           L0: LDC java.util.Map   (line 79)
    |               ALOAD_1     // Ljava/lang/Class; mapType
    |               INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
    |               IFNE L1
    |               NEW java.lang.IllegalArgumentException   (line 80)
    |               DUP
    |               NEW java.lang.StringBuilder
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuilder.<init> ()V
    |               LDC "Map type ["
    |               INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
    |               ALOAD_1     // Ljava/lang/Class; mapType
    |               INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;   (line 81)
    |               INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
    |               LDC "] does not implement [java.util.Map]"
    |               INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
    |               INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
    |               INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
    |               ATHROW
    |           L1: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this   (line 83)
    |               ALOAD_1     // Ljava/lang/Class; mapType
    |               PUTFIELD org.springframework.beans.propertyeditors.CustomMapEditor.mapType Ljava/lang/Class;
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this   (line 84)
    |               ILOAD_2     // Z nullAsEmptyMap
    |               PUTFIELD org.springframework.beans.propertyeditors.CustomMapEditor.nullAsEmptyMap Z
    |               RETURN   (line 85)
    constructor-execution(void org.springframework.beans.propertyeditors.CustomMapEditor.<init>(java.lang.Class, boolean))
  end public void <init>(Class, boolean)

  public void setAsText(String) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this   (line 93)
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomMapEditor.setValue (Ljava/lang/Object;)V
                    RETURN   (line 94)
  end public void setAsText(String) throws java.lang.IllegalArgumentException

  public void setValue(Object):
                    ALOAD_1     // Ljava/lang/Object; value   (line 101)
                    IFNONNULL L0
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomMapEditor.nullAsEmptyMap Z
                    IFEQ L0
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this   (line 102)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomMapEditor.mapType Ljava/lang/Class;
                    ICONST_0
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomMapEditor.createMap (Ljava/lang/Class;I)Ljava/util/Map;
                    INVOKESPECIAL java.beans.PropertyEditorSupport.setValue (Ljava/lang/Object;)V
                    GOTO L6
                L0: ALOAD_1     // Ljava/lang/Object; value   (line 104)
                    IFNULL L1
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomMapEditor.mapType Ljava/lang/Class;
                    ALOAD_1     // Ljava/lang/Object; value
                    INVOKEVIRTUAL java.lang.Class.isInstance (Ljava/lang/Object;)Z
                    IFEQ L2
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomMapEditor.alwaysCreateNewMap ()Z
                    IFNE L2
                L1: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this   (line 106)
                    ALOAD_1     // Ljava/lang/Object; value
                    INVOKESPECIAL java.beans.PropertyEditorSupport.setValue (Ljava/lang/Object;)V
                    GOTO L6
                L2: ALOAD_1     // Ljava/lang/Object; value   (line 108)
                    INSTANCEOF java.util.Map
                    IFEQ L5
                    ALOAD_1     // Ljava/lang/Object; value   (line 110)
                    CHECKCAST java.util.Map
                    ASTORE_2
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this   (line 111)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomMapEditor.mapType Ljava/lang/Class;
                    ALOAD_2     // Ljava/util/Map; source
                    INVOKEINTERFACE java.util.Map.size ()I
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomMapEditor.createMap (Ljava/lang/Class;I)Ljava/util/Map;
                    ASTORE_3
                    ALOAD_2     // Ljava/util/Map; source   (line 112)
                    INVOKEINTERFACE java.util.Map.entrySet ()Ljava/util/Set;
                    INVOKEINTERFACE java.util.Set.iterator ()Ljava/util/Iterator;
                    ASTORE 4
                L3: ALOAD 4
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFEQ L4
                    ALOAD 4
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    CHECKCAST java.util.Map$Entry
                    ASTORE 5
                    ALOAD_3     // Ljava/util/Map; target   (line 113)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this
                    ALOAD 5     // Ljava/util/Map$Entry; entry
                    INVOKEINTERFACE java.util.Map$Entry.getKey ()Ljava/lang/Object;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomMapEditor.convertKey (Ljava/lang/Object;)Ljava/lang/Object;
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this
                    ALOAD 5     // Ljava/util/Map$Entry; entry
                    INVOKEINTERFACE java.util.Map$Entry.getValue ()Ljava/lang/Object;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomMapEditor.convertValue (Ljava/lang/Object;)Ljava/lang/Object;
                    INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                    GOTO L3   (line 114)
                L4: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomMapEditor; this   (line 115)
                    ALOAD_3     // Ljava/util/Map; target
                    INVOKESPECIAL java.beans.PropertyEditorSupport.setValue (Ljava/lang/Object;)V
                    GOTO L6   (line 116)
                L5: NEW java.lang.IllegalArgumentException   (line 118)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "Value cannot be converted to Map: "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_1     // Ljava/lang/Object; value
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L6: RETURN   (line 120)
  end public void setValue(Object)

  protected java.util.Map createMap(Class, int):
                    ALOAD_1     // Ljava/lang/Class; mapType   (line 131)
                    INVOKEVIRTUAL java.lang.Class.isInterface ()Z
                    IFNE L0
    catch java.lang.Exception -> E0
    |               ALOAD_1     // Ljava/lang/Class; mapType   (line 133)
    |               INVOKEVIRTUAL java.lang.Class.newInstance ()Ljava/lang/Object;
    |               CHECKCAST java.util.Map
    catch java.lang.Exception -> E0
                    ARETURN
                E0: ASTORE_3   (line 135)
                    NEW java.lang.IllegalArgumentException   (line 136)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "Could not instantiate map class ["
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_1     // Ljava/lang/Class; mapType
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;   (line 137)
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC "]: "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_3     // Ljava/lang/Exception; ex
                    INVOKEVIRTUAL java.lang.Exception.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L0: LDC java.util.SortedMap   (line 140)
                    ALOAD_1     // Ljava/lang/Class; mapType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L1
                    NEW java.util.TreeMap   (line 141)
                    DUP
                    INVOKESPECIAL java.util.TreeMap.<init> ()V
                    ARETURN
                L1: NEW java.util.LinkedHashMap   (line 144)
                    DUP
                    ILOAD_2     // I initialCapacity
                    INVOKESPECIAL java.util.LinkedHashMap.<init> (I)V
                    ARETURN
  end protected java.util.Map createMap(Class, int)

  protected boolean alwaysCreateNewMap():
                    ICONST_0   (line 157)
                    IRETURN
  end protected boolean alwaysCreateNewMap()

  protected Object convertKey(Object):
                    ALOAD_1     // Ljava/lang/Object; key   (line 174)
                    ARETURN
  end protected Object convertKey(Object)

  protected Object convertValue(Object):
                    ALOAD_1     // Ljava/lang/Object; value   (line 191)
                    ARETURN
  end protected Object convertValue(Object)

  public String getAsText():
                    ACONST_NULL   (line 201)
                    ARETURN
  end public String getAsText()

end public class org.springframework.beans.propertyeditors.CustomMapEditor
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:384)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.PropertyEditorRegistrySupport.createDefaultEditors(PropertyEditorRegistrySupport.java:229)
	at org.springframework.beans.PropertyEditorRegistrySupport.getDefaultEditor(PropertyEditorRegistrySupport.java:191)
	at org.springframework.beans.TypeConverterDelegate.findDefaultEditor(TypeConverterDelegate.java:358)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:193)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.propertyeditors.ByteArrayPropertyEditor
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.propertyeditors.ByteArrayPropertyEditor extends java.beans.PropertyEditorSupport:
  public void <init>():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/ByteArrayPropertyEditor; this   (line 29)
                    INVOKESPECIAL java.beans.PropertyEditorSupport.<init> ()V
    constructor-execution(void org.springframework.beans.propertyeditors.ByteArrayPropertyEditor.<init>())
    |               RETURN
    constructor-execution(void org.springframework.beans.propertyeditors.ByteArrayPropertyEditor.<init>())
  end public void <init>()

  public void setAsText(String):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/ByteArrayPropertyEditor; this   (line 33)
                    ALOAD_1     // Ljava/lang/String; text
                    IFNULL L0
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKEVIRTUAL java.lang.String.getBytes ()[B
                    GOTO L1
                L0: ACONST_NULL
                L1: INVOKEVIRTUAL org.springframework.beans.propertyeditors.ByteArrayPropertyEditor.setValue (Ljava/lang/Object;)V
                    RETURN   (line 34)
  end public void setAsText(String)

  public String getAsText():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/ByteArrayPropertyEditor; this   (line 38)
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.ByteArrayPropertyEditor.getValue ()Ljava/lang/Object;
                    CHECKCAST [B
                    CHECKCAST [B
                    ASTORE_1
                    ALOAD_1     // [B value   (line 39)
                    IFNULL L0
                    NEW java.lang.String
                    DUP
                    ALOAD_1     // [B value
                    INVOKESPECIAL java.lang.String.<init> ([B)V
                    GOTO L1
                L0: LDC ""
                L1: ARETURN
  end public String getAsText()

end public class org.springframework.beans.propertyeditors.ByteArrayPropertyEditor
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:384)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.PropertyEditorRegistrySupport.createDefaultEditors(PropertyEditorRegistrySupport.java:232)
	at org.springframework.beans.PropertyEditorRegistrySupport.getDefaultEditor(PropertyEditorRegistrySupport.java:191)
	at org.springframework.beans.TypeConverterDelegate.findDefaultEditor(TypeConverterDelegate.java:358)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:193)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.propertyeditors.CharArrayPropertyEditor
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.propertyeditors.CharArrayPropertyEditor extends java.beans.PropertyEditorSupport:
  public void <init>():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharArrayPropertyEditor; this   (line 29)
                    INVOKESPECIAL java.beans.PropertyEditorSupport.<init> ()V
    constructor-execution(void org.springframework.beans.propertyeditors.CharArrayPropertyEditor.<init>())
    |               RETURN
    constructor-execution(void org.springframework.beans.propertyeditors.CharArrayPropertyEditor.<init>())
  end public void <init>()

  public void setAsText(String):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharArrayPropertyEditor; this   (line 33)
                    ALOAD_1     // Ljava/lang/String; text
                    IFNULL L0
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKEVIRTUAL java.lang.String.toCharArray ()[C
                    GOTO L1
                L0: ACONST_NULL
                L1: INVOKEVIRTUAL org.springframework.beans.propertyeditors.CharArrayPropertyEditor.setValue (Ljava/lang/Object;)V
                    RETURN   (line 34)
  end public void setAsText(String)

  public String getAsText():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharArrayPropertyEditor; this   (line 38)
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CharArrayPropertyEditor.getValue ()Ljava/lang/Object;
                    CHECKCAST [C
                    CHECKCAST [C
                    ASTORE_1
                    ALOAD_1     // [C value   (line 39)
                    IFNULL L0
                    NEW java.lang.String
                    DUP
                    ALOAD_1     // [C value
                    INVOKESPECIAL java.lang.String.<init> ([C)V
                    GOTO L1
                L0: LDC ""
                L1: ARETURN
  end public String getAsText()

end public class org.springframework.beans.propertyeditors.CharArrayPropertyEditor
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:384)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.PropertyEditorRegistrySupport.createDefaultEditors(PropertyEditorRegistrySupport.java:233)
	at org.springframework.beans.PropertyEditorRegistrySupport.getDefaultEditor(PropertyEditorRegistrySupport.java:191)
	at org.springframework.beans.TypeConverterDelegate.findDefaultEditor(TypeConverterDelegate.java:358)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:193)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.propertyeditors.CharacterEditor
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.propertyeditors.CharacterEditor extends java.beans.PropertyEditorSupport:
  private static final String UNICODE_PREFIX = "\\u"
  private static final int UNICODE_LENGTH = 6
  private final boolean allowEmpty
  public void <init>(boolean):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharacterEditor; this   (line 66)
                    INVOKESPECIAL java.beans.PropertyEditorSupport.<init> ()V
    constructor-execution(void org.springframework.beans.propertyeditors.CharacterEditor.<init>(boolean))
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharacterEditor; this   (line 67)
    |               ILOAD_1     // Z allowEmpty
    |               PUTFIELD org.springframework.beans.propertyeditors.CharacterEditor.allowEmpty Z
    |               RETURN   (line 68)
    constructor-execution(void org.springframework.beans.propertyeditors.CharacterEditor.<init>(boolean))
  end public void <init>(boolean)

  public void setAsText(String) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharacterEditor; this   (line 73)
                    GETFIELD org.springframework.beans.propertyeditors.CharacterEditor.allowEmpty Z
                    IFEQ L0
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKESTATIC org.springframework.util.StringUtils.hasLength (Ljava/lang/String;)Z
                    IFNE L0
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharacterEditor; this   (line 75)
                    ACONST_NULL
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CharacterEditor.setValue (Ljava/lang/Object;)V
                    GOTO L4
                L0: ALOAD_1     // Ljava/lang/String; text   (line 77)
                    IFNONNULL L1
                    NEW java.lang.IllegalArgumentException   (line 78)
                    DUP
                    LDC "null String cannot be converted to char type"
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L1: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharacterEditor; this   (line 80)
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKESPECIAL org.springframework.beans.propertyeditors.CharacterEditor.isUnicodeCharacterSequence (Ljava/lang/String;)Z
                    IFEQ L2
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharacterEditor; this   (line 81)
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKESPECIAL org.springframework.beans.propertyeditors.CharacterEditor.setAsUnicode (Ljava/lang/String;)V
                    GOTO L4
                L2: ALOAD_1     // Ljava/lang/String; text   (line 83)
                    INVOKEVIRTUAL java.lang.String.length ()I
                    ICONST_1
                    IF_ICMPNE L3
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharacterEditor; this   (line 84)
                    ALOAD_1     // Ljava/lang/String; text
                    ICONST_0
                    INVOKEVIRTUAL java.lang.String.charAt (I)C
                    INVOKESTATIC java.lang.Character.valueOf (C)Ljava/lang/Character;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CharacterEditor.setValue (Ljava/lang/Object;)V
                    GOTO L4
                L3: NEW java.lang.IllegalArgumentException   (line 87)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "String ["
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC "] with length "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKEVIRTUAL java.lang.String.length ()I   (line 88)
                    INVOKEVIRTUAL java.lang.StringBuilder.append (I)Ljava/lang/StringBuilder;
                    LDC " cannot be converted to char type: neither Unicode nor single character"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L4: RETURN   (line 90)
  end public void setAsText(String) throws java.lang.IllegalArgumentException

  public String getAsText():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharacterEditor; this   (line 94)
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CharacterEditor.getValue ()Ljava/lang/Object;
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/Object; value   (line 95)
                    IFNULL L0
                    ALOAD_1     // Ljava/lang/Object; value
                    INVOKEVIRTUAL java.lang.Object.toString ()Ljava/lang/String;
                    GOTO L1
                L0: LDC ""
                L1: ARETURN
  end public String getAsText()

  private boolean isUnicodeCharacterSequence(String):
                    ALOAD_1     // Ljava/lang/String; sequence   (line 100)
                    LDC "\u"
                    INVOKEVIRTUAL java.lang.String.startsWith (Ljava/lang/String;)Z
                    IFEQ L0
                    ALOAD_1     // Ljava/lang/String; sequence
                    INVOKEVIRTUAL java.lang.String.length ()I
                    BIPUSH 6
                    IF_ICMPNE L0
                    ICONST_1
                    GOTO L1
                L0: ICONST_0
                L1: IRETURN
  end private boolean isUnicodeCharacterSequence(String)

  private void setAsUnicode(String):
                    ALOAD_1     // Ljava/lang/String; text   (line 104)
                    LDC "\u"
                    INVOKEVIRTUAL java.lang.String.length ()I
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    BIPUSH 16
                    INVOKESTATIC java.lang.Integer.parseInt (Ljava/lang/String;I)I
                    ISTORE_2
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CharacterEditor; this   (line 105)
                    ILOAD_2     // I code
                    I2C
                    INVOKESTATIC java.lang.Character.valueOf (C)Ljava/lang/Character;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CharacterEditor.setValue (Ljava/lang/Object;)V
                    RETURN   (line 106)
  end private void setAsUnicode(String)

end public class org.springframework.beans.propertyeditors.CharacterEditor
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:384)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.PropertyEditorRegistrySupport.createDefaultEditors(PropertyEditorRegistrySupport.java:236)
	at org.springframework.beans.PropertyEditorRegistrySupport.getDefaultEditor(PropertyEditorRegistrySupport.java:191)
	at org.springframework.beans.TypeConverterDelegate.findDefaultEditor(TypeConverterDelegate.java:358)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:193)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.propertyeditors.CustomBooleanEditor
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.propertyeditors.CustomBooleanEditor extends java.beans.PropertyEditorSupport:
  public static final String VALUE_TRUE = "true"
  public static final String VALUE_FALSE = "false"
  public static final String VALUE_ON = "on"
  public static final String VALUE_OFF = "off"
  public static final String VALUE_YES = "yes"
  public static final String VALUE_NO = "no"
  public static final String VALUE_1 = "1"
  public static final String VALUE_0 = "0"
  private final String trueString
  private final String falseString
  private final boolean allowEmpty
  public void <init>(boolean):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 69)
                    ACONST_NULL
                    ACONST_NULL
                    ILOAD_1     // Z allowEmpty
                    INVOKESPECIAL org.springframework.beans.propertyeditors.CustomBooleanEditor.<init> (Ljava/lang/String;Ljava/lang/String;Z)V
    constructor-execution(void org.springframework.beans.propertyeditors.CustomBooleanEditor.<init>(boolean))
    |               RETURN   (line 70)
    constructor-execution(void org.springframework.beans.propertyeditors.CustomBooleanEditor.<init>(boolean))
  end public void <init>(boolean)

  public void <init>(String, String, boolean):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 92)
                    INVOKESPECIAL java.beans.PropertyEditorSupport.<init> ()V
    constructor-execution(void org.springframework.beans.propertyeditors.CustomBooleanEditor.<init>(java.lang.String, java.lang.String, boolean))
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 93)
    |               ALOAD_1     // Ljava/lang/String; trueString
    |               PUTFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.trueString Ljava/lang/String;
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 94)
    |               ALOAD_2     // Ljava/lang/String; falseString
    |               PUTFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.falseString Ljava/lang/String;
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 95)
    |               ILOAD_3     // Z allowEmpty
    |               PUTFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.allowEmpty Z
    |               RETURN   (line 96)
    constructor-execution(void org.springframework.beans.propertyeditors.CustomBooleanEditor.<init>(java.lang.String, java.lang.String, boolean))
  end public void <init>(String, String, boolean)

  public void setAsText(String) throws java.lang.IllegalArgumentException:
                    ALOAD_1     // Ljava/lang/String; text   (line 100)
                    IFNULL L0
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKEVIRTUAL java.lang.String.trim ()Ljava/lang/String;
                    GOTO L1
                L0: ACONST_NULL
                L1: ASTORE_2
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 101)
                    GETFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.allowEmpty Z
                    IFEQ L2
                    ALOAD_2     // Ljava/lang/String; input
                    INVOKESTATIC org.springframework.util.StringUtils.hasLength (Ljava/lang/String;)Z
                    IFNE L2
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 103)
                    ACONST_NULL
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomBooleanEditor.setValue (Ljava/lang/Object;)V
                    GOTO L9
                L2: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 105)
                    GETFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.trueString Ljava/lang/String;
                    IFNULL L3
                    ALOAD_2     // Ljava/lang/String; input
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.trueString Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equalsIgnoreCase (Ljava/lang/String;)Z
                    IFEQ L3
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 106)
                    GETSTATIC java.lang.Boolean.TRUE Ljava/lang/Boolean;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomBooleanEditor.setValue (Ljava/lang/Object;)V
                    GOTO L9
                L3: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 108)
                    GETFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.falseString Ljava/lang/String;
                    IFNULL L4
                    ALOAD_2     // Ljava/lang/String; input
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.falseString Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equalsIgnoreCase (Ljava/lang/String;)Z
                    IFEQ L4
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 109)
                    GETSTATIC java.lang.Boolean.FALSE Ljava/lang/Boolean;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomBooleanEditor.setValue (Ljava/lang/Object;)V
                    GOTO L9
                L4: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 111)
                    GETFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.trueString Ljava/lang/String;
                    IFNONNULL L6
                    ALOAD_2     // Ljava/lang/String; input
                    LDC "true"
                    INVOKEVIRTUAL java.lang.String.equalsIgnoreCase (Ljava/lang/String;)Z   (line 112)
                    IFNE L5
                    ALOAD_2     // Ljava/lang/String; input
                    LDC "on"
                    INVOKEVIRTUAL java.lang.String.equalsIgnoreCase (Ljava/lang/String;)Z
                    IFNE L5
                    ALOAD_2     // Ljava/lang/String; input
                    LDC "yes"
                    INVOKEVIRTUAL java.lang.String.equalsIgnoreCase (Ljava/lang/String;)Z   (line 113)
                    IFNE L5
                    ALOAD_2     // Ljava/lang/String; input
                    LDC "1"
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L6
                L5: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 114)
                    GETSTATIC java.lang.Boolean.TRUE Ljava/lang/Boolean;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomBooleanEditor.setValue (Ljava/lang/Object;)V
                    GOTO L9
                L6: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 116)
                    GETFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.falseString Ljava/lang/String;
                    IFNONNULL L8
                    ALOAD_2     // Ljava/lang/String; input
                    LDC "false"
                    INVOKEVIRTUAL java.lang.String.equalsIgnoreCase (Ljava/lang/String;)Z   (line 117)
                    IFNE L7
                    ALOAD_2     // Ljava/lang/String; input
                    LDC "off"
                    INVOKEVIRTUAL java.lang.String.equalsIgnoreCase (Ljava/lang/String;)Z
                    IFNE L7
                    ALOAD_2     // Ljava/lang/String; input
                    LDC "no"
                    INVOKEVIRTUAL java.lang.String.equalsIgnoreCase (Ljava/lang/String;)Z   (line 118)
                    IFNE L7
                    ALOAD_2     // Ljava/lang/String; input
                    LDC "0"
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L8
                L7: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 119)
                    GETSTATIC java.lang.Boolean.FALSE Ljava/lang/Boolean;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomBooleanEditor.setValue (Ljava/lang/Object;)V
                    GOTO L9
                L8: NEW java.lang.IllegalArgumentException   (line 122)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "Invalid boolean value ["
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC "]"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L9: RETURN   (line 124)
  end public void setAsText(String) throws java.lang.IllegalArgumentException

  public String getAsText():
                    GETSTATIC java.lang.Boolean.TRUE Ljava/lang/Boolean;   (line 128)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomBooleanEditor.getValue ()Ljava/lang/Object;
                    INVOKEVIRTUAL java.lang.Boolean.equals (Ljava/lang/Object;)Z
                    IFEQ L2
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 129)
                    GETFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.trueString Ljava/lang/String;
                    IFNULL L0
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.trueString Ljava/lang/String;
                    GOTO L1
                L0: LDC "true"
                L1: ARETURN
                L2: GETSTATIC java.lang.Boolean.FALSE Ljava/lang/Boolean;   (line 131)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomBooleanEditor.getValue ()Ljava/lang/Object;
                    INVOKEVIRTUAL java.lang.Boolean.equals (Ljava/lang/Object;)Z
                    IFEQ L5
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this   (line 132)
                    GETFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.falseString Ljava/lang/String;
                    IFNULL L3
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomBooleanEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomBooleanEditor.falseString Ljava/lang/String;
                    GOTO L4
                L3: LDC "false"
                L4: ARETURN
                L5: LDC ""   (line 135)
                    ARETURN
  end public String getAsText()

end public class org.springframework.beans.propertyeditors.CustomBooleanEditor
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:384)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.PropertyEditorRegistrySupport.createDefaultEditors(PropertyEditorRegistrySupport.java:240)
	at org.springframework.beans.PropertyEditorRegistrySupport.getDefaultEditor(PropertyEditorRegistrySupport.java:191)
	at org.springframework.beans.TypeConverterDelegate.findDefaultEditor(TypeConverterDelegate.java:358)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:193)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.propertyeditors.CustomNumberEditor
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.propertyeditors.CustomNumberEditor extends java.beans.PropertyEditorSupport:
  private final Class numberClass [Signature(Ljava/lang/Class<+Ljava/lang/Number;>;)]
  private final java.text.NumberFormat numberFormat
  private final boolean allowEmpty
  public void <init>(Class, boolean) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 69)
                    ALOAD_1     // Ljava/lang/Class; numberClass
                    ACONST_NULL
                    ILOAD_2     // Z allowEmpty
                    INVOKESPECIAL org.springframework.beans.propertyeditors.CustomNumberEditor.<init> (Ljava/lang/Class;Ljava/text/NumberFormat;Z)V
    constructor-execution(void org.springframework.beans.propertyeditors.CustomNumberEditor.<init>(java.lang.Class, boolean))
    |               RETURN   (line 70)
    constructor-execution(void org.springframework.beans.propertyeditors.CustomNumberEditor.<init>(java.lang.Class, boolean))
  end public void <init>(Class, boolean) throws java.lang.IllegalArgumentException

  public void <init>(Class, java.text.NumberFormat, boolean) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 87)
                    INVOKESPECIAL java.beans.PropertyEditorSupport.<init> ()V
    constructor-execution(void org.springframework.beans.propertyeditors.CustomNumberEditor.<init>(java.lang.Class, java.text.NumberFormat, boolean))
    |               ALOAD_1     // Ljava/lang/Class; numberClass   (line 89)
    |               IFNULL L0
    |               LDC java.lang.Number
    |               ALOAD_1     // Ljava/lang/Class; numberClass
    |               INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
    |               IFNE L1
    |           L0: NEW java.lang.IllegalArgumentException   (line 90)
    |               DUP
    |               LDC "Property class must be a subclass of Number"
    |               INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
    |               ATHROW
    |           L1: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 92)
    |               ALOAD_1     // Ljava/lang/Class; numberClass
    |               PUTFIELD org.springframework.beans.propertyeditors.CustomNumberEditor.numberClass Ljava/lang/Class;
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 93)
    |               ALOAD_2     // Ljava/text/NumberFormat; numberFormat
    |               PUTFIELD org.springframework.beans.propertyeditors.CustomNumberEditor.numberFormat Ljava/text/NumberFormat;
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 94)
    |               ILOAD_3     // Z allowEmpty
    |               PUTFIELD org.springframework.beans.propertyeditors.CustomNumberEditor.allowEmpty Z
    |               RETURN   (line 95)
    constructor-execution(void org.springframework.beans.propertyeditors.CustomNumberEditor.<init>(java.lang.Class, java.text.NumberFormat, boolean))
  end public void <init>(Class, java.text.NumberFormat, boolean) throws java.lang.IllegalArgumentException

  public void setAsText(String) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 103)
                    GETFIELD org.springframework.beans.propertyeditors.CustomNumberEditor.allowEmpty Z
                    IFEQ L0
                    ALOAD_1     // Ljava/lang/String; text
                    INVOKESTATIC org.springframework.util.StringUtils.hasText (Ljava/lang/String;)Z
                    IFNE L0
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 105)
                    ACONST_NULL
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomNumberEditor.setValue (Ljava/lang/Object;)V
                    GOTO L2
                L0: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 107)
                    GETFIELD org.springframework.beans.propertyeditors.CustomNumberEditor.numberFormat Ljava/text/NumberFormat;
                    IFNULL L1
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 109)
                    ALOAD_1     // Ljava/lang/String; text
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomNumberEditor.numberClass Ljava/lang/Class;
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomNumberEditor.numberFormat Ljava/text/NumberFormat;
                    INVOKESTATIC org.springframework.util.NumberUtils.parseNumber (Ljava/lang/String;Ljava/lang/Class;Ljava/text/NumberFormat;)Ljava/lang/Number;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomNumberEditor.setValue (Ljava/lang/Object;)V
                    GOTO L2
                L1: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 113)
                    ALOAD_1     // Ljava/lang/String; text
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomNumberEditor.numberClass Ljava/lang/Class;
                    INVOKESTATIC org.springframework.util.NumberUtils.parseNumber (Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Number;
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomNumberEditor.setValue (Ljava/lang/Object;)V
                L2: RETURN   (line 115)
  end public void setAsText(String) throws java.lang.IllegalArgumentException

  public void setValue(Object):
                    ALOAD_1     // Ljava/lang/Object; value   (line 122)
                    INSTANCEOF java.lang.Number
                    IFEQ L0
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 123)
                    ALOAD_1     // Ljava/lang/Object; value
                    CHECKCAST java.lang.Number
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.CustomNumberEditor.numberClass Ljava/lang/Class;
                    INVOKESTATIC org.springframework.util.NumberUtils.convertNumberToTargetClass (Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/Number;
                    INVOKESPECIAL java.beans.PropertyEditorSupport.setValue (Ljava/lang/Object;)V
                    GOTO L1
                L0: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 126)
                    ALOAD_1     // Ljava/lang/Object; value
                    INVOKESPECIAL java.beans.PropertyEditorSupport.setValue (Ljava/lang/Object;)V
                L1: RETURN   (line 128)
  end public void setValue(Object)

  public String getAsText():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 135)
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.CustomNumberEditor.getValue ()Ljava/lang/Object;
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/Object; value   (line 136)
                    IFNONNULL L0
                    LDC ""   (line 137)
                    ARETURN
                L0: ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 139)
                    GETFIELD org.springframework.beans.propertyeditors.CustomNumberEditor.numberFormat Ljava/text/NumberFormat;
                    IFNULL L1
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/CustomNumberEditor; this   (line 141)
                    GETFIELD org.springframework.beans.propertyeditors.CustomNumberEditor.numberFormat Ljava/text/NumberFormat;
                    ALOAD_1     // Ljava/lang/Object; value
                    INVOKEVIRTUAL java.text.NumberFormat.format (Ljava/lang/Object;)Ljava/lang/String;
                    ARETURN
                L1: ALOAD_1     // Ljava/lang/Object; value   (line 145)
                    INVOKEVIRTUAL java.lang.Object.toString ()Ljava/lang/String;
                    ARETURN
  end public String getAsText()

end public class org.springframework.beans.propertyeditors.CustomNumberEditor
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:384)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.PropertyEditorRegistrySupport.createDefaultEditors(PropertyEditorRegistrySupport.java:245)
	at org.springframework.beans.PropertyEditorRegistrySupport.getDefaultEditor(PropertyEditorRegistrySupport.java:191)
	at org.springframework.beans.TypeConverterDelegate.findDefaultEditor(TypeConverterDelegate.java:358)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:193)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.propertyeditors.StringArrayPropertyEditor
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.propertyeditors.StringArrayPropertyEditor extends java.beans.PropertyEditorSupport:
  public static final String DEFAULT_SEPARATOR = ","
  private final String separator
  private final String charsToDelete
  private final boolean emptyArrayAsNull
  private final boolean trimValues
  public void <init>():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 59)
                    LDC ","
                    ACONST_NULL
                    ICONST_0
                    INVOKESPECIAL org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init> (Ljava/lang/String;Ljava/lang/String;Z)V
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>())
    |               RETURN   (line 60)
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>())
  end public void <init>()

  public void <init>(String):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 68)
                    ALOAD_1     // Ljava/lang/String; separator
                    ACONST_NULL
                    ICONST_0
                    INVOKESPECIAL org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init> (Ljava/lang/String;Ljava/lang/String;Z)V
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>(java.lang.String))
    |               RETURN   (line 69)
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>(java.lang.String))
  end public void <init>(String)

  public void <init>(String, boolean):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 78)
                    ALOAD_1     // Ljava/lang/String; separator
                    ACONST_NULL
                    ILOAD_2     // Z emptyArrayAsNull
                    INVOKESPECIAL org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init> (Ljava/lang/String;Ljava/lang/String;Z)V
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>(java.lang.String, boolean))
    |               RETURN   (line 79)
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>(java.lang.String, boolean))
  end public void <init>(String, boolean)

  public void <init>(String, boolean, boolean):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 90)
                    ALOAD_1     // Ljava/lang/String; separator
                    ACONST_NULL
                    ILOAD_2     // Z emptyArrayAsNull
                    ILOAD_3     // Z trimValues
                    INVOKESPECIAL org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init> (Ljava/lang/String;Ljava/lang/String;ZZ)V
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>(java.lang.String, boolean, boolean))
    |               RETURN   (line 91)
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>(java.lang.String, boolean, boolean))
  end public void <init>(String, boolean, boolean)

  public void <init>(String, String, boolean):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 103)
                    ALOAD_1     // Ljava/lang/String; separator
                    ALOAD_2     // Ljava/lang/String; charsToDelete
                    ILOAD_3     // Z emptyArrayAsNull
                    ICONST_1
                    INVOKESPECIAL org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init> (Ljava/lang/String;Ljava/lang/String;ZZ)V
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>(java.lang.String, java.lang.String, boolean))
    |               RETURN   (line 104)
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>(java.lang.String, java.lang.String, boolean))
  end public void <init>(String, String, boolean)

  public void <init>(String, String, boolean, boolean):
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 117)
                    INVOKESPECIAL java.beans.PropertyEditorSupport.<init> ()V
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>(java.lang.String, java.lang.String, boolean, boolean))
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 118)
    |               ALOAD_1     // Ljava/lang/String; separator
    |               PUTFIELD org.springframework.beans.propertyeditors.StringArrayPropertyEditor.separator Ljava/lang/String;
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 119)
    |               ALOAD_2     // Ljava/lang/String; charsToDelete
    |               PUTFIELD org.springframework.beans.propertyeditors.StringArrayPropertyEditor.charsToDelete Ljava/lang/String;
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 120)
    |               ILOAD_3     // Z emptyArrayAsNull
    |               PUTFIELD org.springframework.beans.propertyeditors.StringArrayPropertyEditor.emptyArrayAsNull Z
    |               ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 121)
    |               ILOAD 4     // Z trimValues
    |               PUTFIELD org.springframework.beans.propertyeditors.StringArrayPropertyEditor.trimValues Z
    |               RETURN   (line 122)
    constructor-execution(void org.springframework.beans.propertyeditors.StringArrayPropertyEditor.<init>(java.lang.String, java.lang.String, boolean, boolean))
  end public void <init>(String, String, boolean, boolean)

  public void setAsText(String) throws java.lang.IllegalArgumentException:
                    ALOAD_1     // Ljava/lang/String; text   (line 126)
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.StringArrayPropertyEditor.separator Ljava/lang/String;
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.StringArrayPropertyEditor.charsToDelete Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.StringUtils.delimitedListToStringArray (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
                    ASTORE_2
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 127)
                    GETFIELD org.springframework.beans.propertyeditors.StringArrayPropertyEditor.trimValues Z
                    IFEQ L0
                    ALOAD_2     // [Ljava/lang/String; array   (line 128)
                    INVOKESTATIC org.springframework.util.StringUtils.trimArrayElements ([Ljava/lang/String;)[Ljava/lang/String;
                    ASTORE_2     // [Ljava/lang/String; array
                L0: ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 130)
                    GETFIELD org.springframework.beans.propertyeditors.StringArrayPropertyEditor.emptyArrayAsNull Z
                    IFEQ L1
                    ALOAD_2     // [Ljava/lang/String; array
                    ARRAYLENGTH
                    IFNE L1
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 131)
                    ACONST_NULL
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.StringArrayPropertyEditor.setValue (Ljava/lang/Object;)V
                    GOTO L2
                L1: ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 134)
                    ALOAD_2     // [Ljava/lang/String; array
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.StringArrayPropertyEditor.setValue (Ljava/lang/Object;)V
                L2: RETURN   (line 136)
  end public void setAsText(String) throws java.lang.IllegalArgumentException

  public String getAsText():
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this   (line 140)
                    INVOKEVIRTUAL org.springframework.beans.propertyeditors.StringArrayPropertyEditor.getValue ()Ljava/lang/Object;
                    INVOKESTATIC org.springframework.util.ObjectUtils.toObjectArray (Ljava/lang/Object;)[Ljava/lang/Object;
                    ALOAD_0     // Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor; this
                    GETFIELD org.springframework.beans.propertyeditors.StringArrayPropertyEditor.separator Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.StringUtils.arrayToDelimitedString ([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
                    ARETURN
  end public String getAsText()

end public class org.springframework.beans.propertyeditors.StringArrayPropertyEditor
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:384)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.PropertyEditorRegistrySupport.createDefaultEditors(PropertyEditorRegistrySupport.java:262)
	at org.springframework.beans.PropertyEditorRegistrySupport.getDefaultEditor(PropertyEditorRegistrySupport.java:191)
	at org.springframework.beans.TypeConverterDelegate.findDefaultEditor(TypeConverterDelegate.java:358)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:193)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.core.CollectionFactory
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public abstract class org.springframework.core.CollectionFactory extends java.lang.Object:
  private static final java.util.Set approximableCollectionTypes [Signature(Ljava/util/Set<Ljava/lang/Class<*>;>;)]
  private static final java.util.Set approximableMapTypes [Signature(Ljava/util/Set<Ljava/lang/Class<*>;>;)]
  public void <init>():
                    ALOAD_0     // Lorg/springframework/core/CollectionFactory; this   (line 55)
                    INVOKESPECIAL java.lang.Object.<init> ()V
    constructor-execution(void org.springframework.core.CollectionFactory.<init>())
    |               RETURN
    constructor-execution(void org.springframework.core.CollectionFactory.<init>())
  end public void <init>()

  public static boolean isApproximableCollectionType(Class):
                    ALOAD_0     // Ljava/lang/Class; collectionType   (line 94)
                    IFNULL L0
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;
                    ALOAD_0     // Ljava/lang/Class; collectionType
                    INVOKEINTERFACE java.util.Set.contains (Ljava/lang/Object;)Z
                    IFEQ L0
                    ICONST_1
                    GOTO L1
                L0: ICONST_0
                L1: IRETURN
  end public static boolean isApproximableCollectionType(Class)

  public static java.util.Collection createApproximateCollection(Object, int):
                    ALOAD_0     // Ljava/lang/Object; collection   (line 111)
                    INSTANCEOF java.util.LinkedList
                    IFEQ L0
                    NEW java.util.LinkedList   (line 112)
                    DUP
                    INVOKESPECIAL java.util.LinkedList.<init> ()V
                    ARETURN
                L0: ALOAD_0     // Ljava/lang/Object; collection   (line 114)
                    INSTANCEOF java.util.List
                    IFEQ L1
                    NEW java.util.ArrayList   (line 115)
                    DUP
                    ILOAD_1     // I capacity
                    INVOKESPECIAL java.util.ArrayList.<init> (I)V
                    ARETURN
                L1: ALOAD_0     // Ljava/lang/Object; collection   (line 117)
                    INSTANCEOF java.util.EnumSet
                    IFEQ L2
                    ALOAD_0     // Ljava/lang/Object; collection   (line 119)
                    CHECKCAST java.util.EnumSet
                    INVOKESTATIC java.util.EnumSet.copyOf (Ljava/util/EnumSet;)Ljava/util/EnumSet;
                    ASTORE_2
                    ALOAD_2     // Ljava/util/Collection; enumSet   (line 120)
                    INVOKEINTERFACE java.util.Collection.clear ()V
                    ALOAD_2     // Ljava/util/Collection; enumSet   (line 121)
                    ARETURN
                L2: ALOAD_0     // Ljava/lang/Object; collection   (line 123)
                    INSTANCEOF java.util.SortedSet
                    IFEQ L3
                    NEW java.util.TreeSet   (line 124)
                    DUP
                    ALOAD_0     // Ljava/lang/Object; collection
                    CHECKCAST java.util.SortedSet
                    INVOKEINTERFACE java.util.SortedSet.comparator ()Ljava/util/Comparator;
                    INVOKESPECIAL java.util.TreeSet.<init> (Ljava/util/Comparator;)V
                    ARETURN
                L3: NEW java.util.LinkedHashSet   (line 127)
                    DUP
                    ILOAD_1     // I capacity
                    INVOKESPECIAL java.util.LinkedHashSet.<init> (I)V
                    ARETURN
  end public static java.util.Collection createApproximateCollection(Object, int)

  public static java.util.Collection createCollection(Class, int):
                    ALOAD_0     // Ljava/lang/Class; collectionType   (line 140)
                    ACONST_NULL
                    ILOAD_1     // I capacity
                    INVOKESTATIC org.springframework.core.CollectionFactory.createCollection (Ljava/lang/Class;Ljava/lang/Class;I)Ljava/util/Collection;
                    ARETURN
  end public static java.util.Collection createCollection(Class, int)

  public static java.util.Collection createCollection(Class, Class, int):
                    ALOAD_0     // Ljava/lang/Class; collectionType   (line 158)
                    LDC "Collection type must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; collectionType   (line 159)
                    INVOKEVIRTUAL java.lang.Class.isInterface ()Z
                    IFEQ L5
                    LDC java.util.Set   (line 160)
                    ALOAD_0     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFNE L0
                    LDC java.util.Collection
                    ALOAD_0     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L1
                L0: NEW java.util.LinkedHashSet   (line 161)
                    DUP
                    ILOAD_2     // I capacity
                    INVOKESPECIAL java.util.LinkedHashSet.<init> (I)V
                    ARETURN
                L1: LDC java.util.List   (line 163)
                    ALOAD_0     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L2
                    NEW java.util.ArrayList   (line 164)
                    DUP
                    ILOAD_2     // I capacity
                    INVOKESPECIAL java.util.ArrayList.<init> (I)V
                    ARETURN
                L2: LDC java.util.SortedSet   (line 166)
                    ALOAD_0     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFNE L3
                    LDC java.util.NavigableSet
                    ALOAD_0     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L4
                L3: NEW java.util.TreeSet   (line 167)
                    DUP
                    INVOKESPECIAL java.util.TreeSet.<init> ()V
                    ARETURN
                L4: NEW java.lang.IllegalArgumentException   (line 170)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "Unsupported Collection interface: "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_0     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L5: LDC java.util.EnumSet   (line 173)
                    ALOAD_0     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L6
                    ALOAD_1     // Ljava/lang/Class; elementType   (line 174)
                    LDC "Cannot create EnumSet for unknown element type"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/Class; elementType   (line 176)
                    INVOKESTATIC org.springframework.core.CollectionFactory.asEnumType (Ljava/lang/Class;)Ljava/lang/Class;
                    INVOKESTATIC java.util.EnumSet.noneOf (Ljava/lang/Class;)Ljava/util/EnumSet;
                    ARETURN
                L6: LDC java.util.Collection   (line 179)
                    ALOAD_0     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
                    IFNE L7
                    NEW java.lang.IllegalArgumentException   (line 180)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "Unsupported Collection type: "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_0     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
    catch java.lang.Exception -> E0
    |           L7: ALOAD_0     // Ljava/lang/Class; collectionType   (line 183)
    |               INVOKEVIRTUAL java.lang.Class.newInstance ()Ljava/lang/Object;
    |               CHECKCAST java.util.Collection
    catch java.lang.Exception -> E0
                    ARETURN
                E0: ASTORE_3   (line 185)
                    NEW java.lang.IllegalArgumentException   (line 186)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "Could not instantiate Collection type: "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_0     // Ljava/lang/Class; collectionType
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;   (line 187)
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ALOAD_3     // Ljava/lang/Exception; ex
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V
                    ATHROW
  end public static java.util.Collection createCollection(Class, Class, int)

  public static boolean isApproximableMapType(Class):
                    ALOAD_0     // Ljava/lang/Class; mapType   (line 199)
                    IFNULL L0
                    GETSTATIC org.springframework.core.CollectionFactory.approximableMapTypes Ljava/util/Set;
                    ALOAD_0     // Ljava/lang/Class; mapType
                    INVOKEINTERFACE java.util.Set.contains (Ljava/lang/Object;)Z
                    IFEQ L0
                    ICONST_1
                    GOTO L1
                L0: ICONST_0
                L1: IRETURN
  end public static boolean isApproximableMapType(Class)

  public static java.util.Map createApproximateMap(Object, int):
                    ALOAD_0     // Ljava/lang/Object; map   (line 214)
                    INSTANCEOF java.util.EnumMap
                    IFEQ L0
                    NEW java.util.EnumMap   (line 215)
                    DUP
                    ALOAD_0     // Ljava/lang/Object; map
                    CHECKCAST java.util.EnumMap
                    INVOKESPECIAL java.util.EnumMap.<init> (Ljava/util/EnumMap;)V
                    ASTORE_2
                    ALOAD_2     // Ljava/util/EnumMap; enumMap   (line 216)
                    INVOKEVIRTUAL java.util.EnumMap.clear ()V
                    ALOAD_2     // Ljava/util/EnumMap; enumMap   (line 217)
                    ARETURN
                L0: ALOAD_0     // Ljava/lang/Object; map   (line 219)
                    INSTANCEOF java.util.SortedMap
                    IFEQ L1
                    NEW java.util.TreeMap   (line 220)
                    DUP
                    ALOAD_0     // Ljava/lang/Object; map
                    CHECKCAST java.util.SortedMap
                    INVOKEINTERFACE java.util.SortedMap.comparator ()Ljava/util/Comparator;
                    INVOKESPECIAL java.util.TreeMap.<init> (Ljava/util/Comparator;)V
                    ARETURN
                L1: NEW java.util.LinkedHashMap   (line 223)
                    DUP
                    ILOAD_1     // I capacity
                    INVOKESPECIAL java.util.LinkedHashMap.<init> (I)V
                    ARETURN
  end public static java.util.Map createApproximateMap(Object, int)

  public static java.util.Map createMap(Class, int):
                    ALOAD_0     // Ljava/lang/Class; mapType   (line 236)
                    ACONST_NULL
                    ILOAD_1     // I capacity
                    INVOKESTATIC org.springframework.core.CollectionFactory.createMap (Ljava/lang/Class;Ljava/lang/Class;I)Ljava/util/Map;
                    ARETURN
  end public static java.util.Map createMap(Class, int)

  public static java.util.Map createMap(Class, Class, int):
                    ALOAD_0     // Ljava/lang/Class; mapType   (line 254)
                    LDC "Map type must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; mapType   (line 255)
                    INVOKEVIRTUAL java.lang.Class.isInterface ()Z
                    IFEQ L4
                    LDC java.util.Map   (line 256)
                    ALOAD_0     // Ljava/lang/Class; mapType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L0
                    NEW java.util.LinkedHashMap   (line 257)
                    DUP
                    ILOAD_2     // I capacity
                    INVOKESPECIAL java.util.LinkedHashMap.<init> (I)V
                    ARETURN
                L0: LDC java.util.SortedMap   (line 259)
                    ALOAD_0     // Ljava/lang/Class; mapType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFNE L1
                    LDC java.util.NavigableMap
                    ALOAD_0     // Ljava/lang/Class; mapType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L2
                L1: NEW java.util.TreeMap   (line 260)
                    DUP
                    INVOKESPECIAL java.util.TreeMap.<init> ()V
                    ARETURN
                L2: LDC org.springframework.util.MultiValueMap   (line 262)
                    ALOAD_0     // Ljava/lang/Class; mapType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L3
                    NEW org.springframework.util.LinkedMultiValueMap   (line 263)
                    DUP
                    INVOKESPECIAL org.springframework.util.LinkedMultiValueMap.<init> ()V
                    ARETURN
                L3: NEW java.lang.IllegalArgumentException   (line 266)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "Unsupported Map interface: "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_0     // Ljava/lang/Class; mapType
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L4: LDC java.util.EnumMap   (line 269)
                    ALOAD_0     // Ljava/lang/Class; mapType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L5
                    ALOAD_1     // Ljava/lang/Class; keyType   (line 270)
                    LDC "Cannot create EnumMap for unknown key type"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    NEW java.util.EnumMap   (line 271)
                    DUP
                    ALOAD_1     // Ljava/lang/Class; keyType
                    INVOKESTATIC org.springframework.core.CollectionFactory.asEnumType (Ljava/lang/Class;)Ljava/lang/Class;
                    INVOKESPECIAL java.util.EnumMap.<init> (Ljava/lang/Class;)V
                    ARETURN
                L5: LDC java.util.Map   (line 274)
                    ALOAD_0     // Ljava/lang/Class; mapType
                    INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
                    IFNE L6
                    NEW java.lang.IllegalArgumentException   (line 275)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "Unsupported Map type: "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_0     // Ljava/lang/Class; mapType
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
    catch java.lang.Exception -> E0
    |           L6: ALOAD_0     // Ljava/lang/Class; mapType   (line 278)
    |               INVOKEVIRTUAL java.lang.Class.newInstance ()Ljava/lang/Object;
    |               CHECKCAST java.util.Map
    catch java.lang.Exception -> E0
                    ARETURN
                E0: ASTORE_3   (line 280)
                    NEW java.lang.IllegalArgumentException   (line 281)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "Could not instantiate Map type: "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_0     // Ljava/lang/Class; mapType
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ALOAD_3     // Ljava/lang/Exception; ex
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V
                    ATHROW
  end public static java.util.Map createMap(Class, Class, int)

  private static Class asEnumType(Class):
                    ALOAD_0     // Ljava/lang/Class; enumType   (line 294)
                    LDC "Enum type must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    LDC java.lang.Enum   (line 295)
                    ALOAD_0     // Ljava/lang/Class; enumType
                    INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
                    IFNE L0
                    NEW java.lang.IllegalArgumentException   (line 296)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    LDC "Supplied type is not an enum: "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_0     // Ljava/lang/Class; enumType
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L0: ALOAD_0     // Ljava/lang/Class; enumType   (line 298)
                    LDC java.lang.Enum
                    INVOKEVIRTUAL java.lang.Class.asSubclass (Ljava/lang/Class;)Ljava/lang/Class;
                    ARETURN
  end private static Class asEnumType(Class)

  static void <clinit>():
                    NEW java.util.HashSet   (line 57)
                    DUP
                    BIPUSH 11
                    INVOKESPECIAL java.util.HashSet.<init> (I)V
                    PUTSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;
                    NEW java.util.HashSet   (line 59)
                    DUP
                    BIPUSH 7
                    INVOKESPECIAL java.util.HashSet.<init> (I)V
                    PUTSTATIC org.springframework.core.CollectionFactory.approximableMapTypes Ljava/util/Set;
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;   (line 64)
                    LDC java.util.Collection
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;   (line 65)
                    LDC java.util.List
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;   (line 66)
                    LDC java.util.Set
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;   (line 67)
                    LDC java.util.SortedSet
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;   (line 68)
                    LDC java.util.NavigableSet
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableMapTypes Ljava/util/Set;   (line 69)
                    LDC java.util.Map
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableMapTypes Ljava/util/Set;   (line 70)
                    LDC java.util.SortedMap
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableMapTypes Ljava/util/Set;   (line 71)
                    LDC java.util.NavigableMap
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;   (line 74)
                    LDC java.util.ArrayList
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;   (line 75)
                    LDC java.util.LinkedList
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;   (line 76)
                    LDC java.util.HashSet
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;   (line 77)
                    LDC java.util.LinkedHashSet
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;   (line 78)
                    LDC java.util.TreeSet
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableCollectionTypes Ljava/util/Set;   (line 79)
                    LDC java.util.EnumSet
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableMapTypes Ljava/util/Set;   (line 80)
                    LDC java.util.HashMap
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableMapTypes Ljava/util/Set;   (line 81)
                    LDC java.util.LinkedHashMap
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableMapTypes Ljava/util/Set;   (line 82)
                    LDC java.util.TreeMap
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    GETSTATIC org.springframework.core.CollectionFactory.approximableMapTypes Ljava/util/Set;   (line 83)
                    LDC java.util.EnumMap
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                    RETURN   (line 84)
  end static void <clinit>()
end public abstract class org.springframework.core.CollectionFactory
 -- (ClassFormatException) File: 'java.lang.reflect.AnnotatedElement': Invalid byte tag in constant pool: 15
File: 'java.lang.reflect.AnnotatedElement': Invalid byte tag in constant pool: 15
org.aspectj.apache.bcel.classfile.ClassFormatException: File: 'java.lang.reflect.AnnotatedElement': Invalid byte tag in constant pool: 15
	at org.aspectj.apache.bcel.classfile.ClassParser.readConstantPool(ClassParser.java:192)
	at org.aspectj.apache.bcel.classfile.ClassParser.parse(ClassParser.java:131)
	at org.aspectj.apache.bcel.util.ClassLoaderRepository.loadClass(ClassLoaderRepository.java:323)
	at org.aspectj.weaver.bcel.BcelWorld.lookupJavaClass(BcelWorld.java:402)
	at org.aspectj.weaver.bcel.BcelWorld.resolveDelegate(BcelWorld.java:376)
	at org.aspectj.weaver.ltw.LTWWorld.resolveDelegate(LTWWorld.java:107)
	at org.aspectj.weaver.World.resolveToReferenceType(World.java:485)
	at org.aspectj.weaver.World.resolve(World.java:326)
	at org.aspectj.weaver.World.resolve(World.java:236)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:97)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:41)
	at org.aspectj.weaver.bcel.BcelObjectType.ensureGenericSignatureUnpacked(BcelObjectType.java:810)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:257)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.TypeConverterDelegate.convertToTypedCollection(TypeConverterDelegate.java:500)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:216)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:107)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:64)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:40)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1007)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
 class org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider extends java.lang.Object implements org.springframework.core.OrderComparator$OrderSourceProvider:
  private final java.util.Map instancesToBeanNames [Signature(Ljava/util/Map<Ljava/lang/Object;Ljava/lang/String;>;)]
  final org.springframework.beans.factory.support.DefaultListableBeanFactory this$0
  public void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory, java.util.Map):
                    ALOAD_0     // Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$FactoryAwareOrderSourceProvider; this   (line 1456)
                    ALOAD_1
                    PUTFIELD org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider.this$0 Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
                    ALOAD_0     // Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$FactoryAwareOrderSourceProvider; this
                    INVOKESPECIAL java.lang.Object.<init> ()V
    constructor-execution(void org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider.<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory, java.util.Map))
    |               ALOAD_0     // Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$FactoryAwareOrderSourceProvider; this   (line 1457)
    |               ALOAD_2     // Ljava/util/Map; instancesToBeanNames
    |               PUTFIELD org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider.instancesToBeanNames Ljava/util/Map;
    |               RETURN   (line 1458)
    constructor-execution(void org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider.<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory, java.util.Map))
  end public void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory, java.util.Map)

  public Object getOrderSource(Object):
                    ALOAD_0     // Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$FactoryAwareOrderSourceProvider; this   (line 1462)
                    ALOAD_0     // Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$FactoryAwareOrderSourceProvider; this
                    GETFIELD org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider.instancesToBeanNames Ljava/util/Map;
                    ALOAD_1     // Ljava/lang/Object; obj
                    INVOKEINTERFACE java.util.Map.get (Ljava/lang/Object;)Ljava/lang/Object;
                    CHECKCAST java.lang.String
                    INVOKESPECIAL org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider.getFactoryMethod (Ljava/lang/String;)Ljava/lang/reflect/Method;
                    ARETURN
  end public Object getOrderSource(Object)

  private java.lang.reflect.Method getFactoryMethod(String):
                    ALOAD_1     // Ljava/lang/String; beanName   (line 1466)
                    IFNULL L0
                    ALOAD_0     // Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$FactoryAwareOrderSourceProvider; this
                    GETFIELD org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider.this$0 Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
                    ALOAD_1     // Ljava/lang/String; beanName
                    INVOKEVIRTUAL org.springframework.beans.factory.support.DefaultListableBeanFactory.containsBeanDefinition (Ljava/lang/String;)Z
                    IFEQ L0
                    ALOAD_0     // Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$FactoryAwareOrderSourceProvider; this   (line 1467)
                    GETFIELD org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider.this$0 Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
                    ALOAD_1     // Ljava/lang/String; beanName
                    INVOKEVIRTUAL org.springframework.beans.factory.support.DefaultListableBeanFactory.getMergedBeanDefinition (Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
                    ASTORE_2
                    ALOAD_2     // Lorg/springframework/beans/factory/config/BeanDefinition; bd   (line 1468)
                    INSTANCEOF org.springframework.beans.factory.support.RootBeanDefinition
                    IFEQ L0
                    ALOAD_2     // Lorg/springframework/beans/factory/config/BeanDefinition; bd   (line 1469)
                    CHECKCAST org.springframework.beans.factory.support.RootBeanDefinition
                    INVOKEVIRTUAL org.springframework.beans.factory.support.RootBeanDefinition.getResolvedFactoryMethod ()Ljava/lang/reflect/Method;
                    ARETURN
                L0: ACONST_NULL   (line 1472)
                    ARETURN
  end private java.lang.reflect.Method getFactoryMethod(String)

end  class org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider
 -- (ClassFormatException) File: 'java.lang.reflect.AnnotatedElement': Invalid byte tag in constant pool: 15
File: 'java.lang.reflect.AnnotatedElement': Invalid byte tag in constant pool: 15
org.aspectj.apache.bcel.classfile.ClassFormatException: File: 'java.lang.reflect.AnnotatedElement': Invalid byte tag in constant pool: 15
	at org.aspectj.apache.bcel.classfile.ClassParser.readConstantPool(ClassParser.java:192)
	at org.aspectj.apache.bcel.classfile.ClassParser.parse(ClassParser.java:131)
	at org.aspectj.apache.bcel.util.ClassLoaderRepository.loadClass(ClassLoaderRepository.java:323)
	at org.aspectj.weaver.bcel.BcelWorld.lookupJavaClass(BcelWorld.java:402)
	at org.aspectj.weaver.bcel.BcelWorld.resolveDelegate(BcelWorld.java:376)
	at org.aspectj.weaver.ltw.LTWWorld.resolveDelegate(LTWWorld.java:107)
	at org.aspectj.weaver.World.resolveToReferenceType(World.java:485)
	at org.aspectj.weaver.World.resolve(World.java:326)
	at org.aspectj.weaver.World.resolve(World.java:236)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:268)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:626)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:201)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:203)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:183)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3173)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2565)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:480)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:99)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1638)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1401)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1187)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:472)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:323)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:99)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer.transform(AspectJWeavingEnabler.java:108)
	at org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer.transform(InstrumentationLoadTimeWeaver.java:184)
	at sun.instrument.TransformerManager.transform(Unknown Source)
	at sun.instrument.InstrumentationImpl.transform(Unknown Source)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.security.SecureClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.createFactoryAwareOrderSourceProvider(DefaultListableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.adaptDependencyComparator(DefaultListableBeanFactory.java:1074)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1009)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.springExemple.presentation.Presentation2.main(Presentation2.java:13)

error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.core.annotation.OrderUtils
when weaving classes 
when weaving 
 [Xlint:cantFindType]
